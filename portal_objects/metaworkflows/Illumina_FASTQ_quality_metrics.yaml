## Pipeline information #####################################
#     General information for the pipeline
#############################################################
name: Illumina_FASTQ_quality_metrics
description: Calculate quality metrics for input files in FASTQ format. |
             Implementation for short reads Illumina data

category:
  - Quality Control

## General arguments ########################################
#     Pipeline input, reference files, and general arguments
#       define all arguments for the pipeline here
#############################################################
input:

  # File argument
  input_files_fastq_gz:
    argument_type: file.fastq_gz
    dimensionality: 2

  kraken2_db:
    argument_type: file.tar_gz
    files:
      - kraken2-standard-16gb@GRCh38_20240605

  # Parameter argument
  nthreads:
    argument_type: parameter.integer
    value: 1

  # QC ruleset argument
  qc_ruleset:
    argument_type: qc_ruleset.object
    qc_thresholds:
      kraken2_human:
        rule: Percentage Human Sequences [Kraken2]|>|95|0
        flag: True
      kraken2_virus:
        rule: Percentage Viral Sequences [Kraken2]|<|0.3|100
        flag: True
      kraken2_bacteria:
        rule: Percentage Bacterial Sequences [Kraken2]|<|0.1|100
        flag: True
      sequence_length:
        rule: Sequence Length [FastQC]|is_type|int|int
        flag: True
    qc_rule: "{kraken2_human} and {kraken2_virus} and {kraken2_bacteria} and {sequence_length}"

## Workflows and dependencies ###############################
#     Information for the workflows and their dependencies
#############################################################
workflows:

  ## Workflow definition #####################
  ############################################
  get_fastq_lanes:

    ## Specific arguments ##############
    ####################################
    input:

      # File arguments
      input_file_fastq_gz:
        argument_type: file.fastq_gz
        source_argument_name: input_files_fastq_gz
        scatter: 2

    ## Output ##########################
    ####################################
    output:

      # File output
      output_file_txt:
        description: lane identifiers report
        data_category:
          - Quality Control
        data_type:
          - Statistics
        s3_lifecycle_category: no_storage

    ## EC2 Configuration to use ########
    ####################################
    config:
      instance_type:
        - t3.small
      ebs_size: '1.1x'
      ebs_optimized: True
      spot_instance: True
      run_name: run_get_fastq_lanes
      behavior_on_capacity_limit: wait_and_retry

  ## Workflow definition #####################
  ############################################
  compare_lanes:

    ## Specific arguments ##############
    ####################################
    input:

      # File arguments
      input_files_txt:
        argument_type: file.txt
        source: get_fastq_lanes
        source_argument_name: output_file_txt
        gather: 1

    ## Output ##########################
    ####################################
    output:

      # File output
      output_log_txt:
        description: lane identifiers summary
        data_category:
          - Quality Control
        data_type:
          - Statistics

    ## EC2 Configuration to use ########
    ####################################
    config:
      instance_type:
        - t3.small
      ebs_size: '1.1x'
      ebs_optimized: True
      spot_instance: True
      run_name: run_compare_lanes
      behavior_on_capacity_limit: wait_and_retry

  ## Workflow definition #####################
  ############################################
  fastqc:

    ## Specific arguments ##############
    ####################################
    input:

      # File arguments
      input_file_fastq_gz:
        argument_type: file.fastq_gz
        source_argument_name: input_files_fastq_gz
        scatter: 2

      # Parameter arguments
      nthreads:
        argument_type: parameter.integer

      # compare_lanes dependency
      #   this is a fake dependency to force
      #   fastqc step to wait success of all
      #   compare_lanes before start running
      input_logs_txt:
        argument_type: file.txt
        source: compare_lanes
        source_argument_name: output_log_txt
        gather: 1

    ## Output ##########################
    ####################################
    output:

      # File output
      output_report_zip:
        description: FastQC compressed output report
        data_category:
          - Quality Control
        data_type:
          - Statistics
          - Image

      output_summary_txt:
        description: FastQC summary output TXT
        data_category:
          - Quality Control
        data_type:
          - Statistics

    ## EC2 Configuration to use ########
    ####################################
    config:
      instance_type:
        - t3.large
      ebs_size: '1.1x'
      ebs_optimized: True
      spot_instance: True
      run_name: run_fastqc
      behavior_on_capacity_limit: wait_and_retry

  ## Workflow definition #####################
  ############################################
  kraken2:

    ## Specific arguments ##############
    ####################################
    input:

      # File arguments
      input_file_fastq_gz:
        argument_type: file.fastq_gz
        source_argument_name: input_files_fastq_gz
        scatter: 2

      database:
        argument_type: file.tar_gz
        source_argument_name: kraken2_db

      # Parameter arguments
      nthreads:
        argument_type: parameter.integer
        value: 4

      # compare_lanes dependency
      #   this is a fake dependency to force
      #   kraken2 step to wait success of all
      #   compare_lanes before start running
      input_logs_txt:
        argument_type: file.txt
        source: compare_lanes
        source_argument_name: output_log_txt
        gather: 1

    ## Output ##########################
    ####################################
    output:

      output_file_txt:
        description: Kraken2 output report TXT
        data_category:
          - Quality Control
        data_type:
          - Statistics

    ## EC2 Configuration to use ########
    ####################################
    config:
      instance_type:
        - r5.xlarge
        - r5a.xlarge
        - r6a.xlarge
        - r6i.xlarge
      ebs_size: '2.1x'
      ebs_optimized: True
      spot_instance: True
      run_name: run_kraken2
      behavior_on_capacity_limit: wait_and_retry

  ## Workflow definition #####################
  ############################################
  parse-qc_FASTQ_Quality_Metrics_short_reads:

    ## Specific arguments ##############
    ####################################
    input:

      # File arguments
      input_file_fastq_gz:
        argument_type: file.fastq_gz
        source_argument_name: input_files_fastq_gz
        input_dimension: 2
        mount: True
        # this file is actually not used by the code but is needed
        #   to specify where the quality metrics object need to be linked

      fastqc_report_zip:
        argument_type: file.zip
        source: fastqc
        source_argument_name: output_report_zip

      fastqc_summary_txt:
        argument_type: file.txt
        source: fastqc
        source_argument_name: output_summary_txt

      kraken2_report_txt:
        argument_type: file.txt
        source: kraken2
        source_argument_name: output_file_txt

      # QC ruleset arguments
      qc_ruleset:
        argument_type: qc_ruleset.object

    ## Output ##########################
    ####################################
    output:

      # File output
      qc_values_json:
        description: QC output JSON
        data_category:
          - Quality Control
        data_type:
          - Statistics

      metrics_zip:
        description: QC compressed output
        data_category:
          - Quality Control
        data_type:
          - Statistics
          - Image

    ## EC2 Configuration to use ########
    ####################################
    config:
      instance_type:
        - t3.small
      ebs_size: 10
      ebs_optimized: True
      spot_instance: True
      run_name: run_parse-qc_FASTQ_Quality_Metrics_short_reads
      behavior_on_capacity_limit: wait_and_retry
